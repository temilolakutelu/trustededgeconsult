<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Multimedia extends MY_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Multimedia_model', 'Audit_model']);
        $this->load->library('form_validation');
	$this->load->library('datatables');
    }

    public function index()
    {
      $page_data = $this->Multimedia_model->get_all();

      $data = array(
        'title' => 'Multimedia',
        'tab_data' => $page_data,
      );
        $this->template->load('admin', 'media/list', $data);
    }

    public function create()
    {
        
        $data = array(
            'button' => 'Add Multimedia',
            'title' => 'Multimedia',
            'action' => site_url('multimedia/create_action'),
	);
        $this->template->load('admin', 'media/add', $data);
    }

    public function create_action()
    {
        $this->_rules();

         if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
    
            $data = array(
		          'mediaTitle' => $this->input->post('title',TRUE),
                'mediaURL' => $this->input->post('reference',TRUE),
                 'mediaDate' => date('Y-m-d',time()),
    
	    );

            $this->Multimedia_model->insert($data);
            $task='Added a new media to Multimedia Table'; 
            $this->audit($task);
            $this->session->set_flashdata('message', 'media added successfully');
            redirect(site_url('multimedia'));
        }
    }
    
    public function edit($id)
    {
         $row= $this->Multimedia_model->get_by_id($id);
         if ($row) {
            $data = array(
                'title' => 'Edit Multimedia',
                'button'=>'Update Multimedia',
                'action' => site_url('multimedia/edit_action'),
            'id' => $row->mediaID,
            'title' => $row->mediaTitle,
            'reference'=> $row->mediaURL,
		);
            $this->template->load('admin', 'media/edit', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('multimedia'));
        }
    }

    public function edit_action()
    {
        $input_id=$this->input->post('id',TRUE);
            
            $data = array(
		          'mediaTitle' => $this->input->post('title',TRUE),
               'mediaURL' => $this->input->post('reference',TRUE),
               
	    );
            $this->Multimedia_model->update($this->input->post('id'), $data);
            $task='Updated a media on Multimedia Table'; 
            $this->audit($task);
            $this->session->set_flashdata('message', 'media updated successfully');
            redirect(site_url('multimedia'));
        }
  
    public function delete($id)
    {
      //  $this->check_role(); 
        $row = $this->Multimedia_model->get_by_id($id);

        if ($row) {
            $this->Multimedia_model->delete($id);
            // $task='Deleted '.$row->name.' from Blood Group';
           // $this->audit($task);
             $task='Deleted '. $row->mediaTitle.' from Multimedia Table'; 
            $this->audit($task);
            $this->session->set_flashdata('message', 'media deleted Successfully');
            redirect(site_url('multimedia'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('multimedia'));
        }
    }
    
     public function _rules()
    {
	$this->form_validation->set_rules('title', 'Tab title', 'trim|required|is_unique[tb_multimedia.mediaTitle]',
        array(
                'required'      => 'You have not provided %s.',
                'is_unique'     => 'This %s already exists.'
        ));
         $this->form_validation->set_rules('reference', 'media web reference', 'trim|required');
    }

     public function audit($task){
        $login=$this->session->userdata('logged_in');
            $user=$login['firstname'].' '.$login['lastname'];
            $data_audit = array(
                'user' => $user,
                'task' => $task,
                'date_time' => date('Y-m-d H:i:s',time()),
		      );
            
            $this->Audit_model->insert($data_audit);
    }
   
}

/* End of file Blood_group.php */
/* Location: ./application/controllers/Blood_group.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2017-06-01 14:53:53 */
/* http://harviacode.com */
